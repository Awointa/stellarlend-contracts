name: Soroban Smart Contracts CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Formatting and linting checks
  check:
    name: Format & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: |
          cd stellar-lend
          cargo fmt --all -- --check

      - name: Run clippy
        run: |
          cd stellar-lend
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Check for unused dependencies
        run: |
          cd stellar-lend
          cargo +nightly udeps --all-targets

  # Soroban-specific validations
  soroban-checks:
    name: Soroban Validations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-soroban-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-soroban-

      - name: Install Stellar CLI
        run: |
          curl -L https://github.com/stellar/stellar-cli/releases/latest/download/stellar-cli-x86_64-unknown-linux-gnu.tar.gz | tar xz
          sudo mv stellar /usr/local/bin/
          stellar --version

      - name: Validate contract structure
        run: |
          cd stellar-lend
          # Check that contracts can be built for wasm32
          cargo check --target wasm32-unknown-unknown

      - name: Build Soroban contracts
        run: |
          cd stellar-lend
          stellar contract build --verbose

      - name: Optimize contract builds
        run: |
          cd stellar-lend
          stellar contract optimize --wasm target/wasm32-unknown-unknown/release/*.wasm

      - name: Validate contract metadata
        run: |
          cd stellar-lend
          # Check if contracts have proper metadata
          for wasm in target/wasm32-unknown-unknown/release/*.wasm; do
            if [ -f "$wasm" ]; then
              echo "Validating $wasm"
              stellar contract inspect --wasm "$wasm" --output json
            fi
          done

  # Build and test
  build-and-test:
    name: Build & Test
    runs-on: macos-latest
    needs: [check, soroban-checks]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Stellar CLI
        run: |
          brew update
          brew install stellar-cli
          stellar --version

      - name: Build project
        run: |
          cd stellar-lend
          cargo build --verbose

      - name: Build Soroban contracts
        run: |
          cd stellar-lend
          stellar contract build --verbose

      - name: Run tests
        run: |
          cd stellar-lend
          cargo test --verbose

      - name: Run integration tests (if any)
        run: |
          cd stellar-lend
          # Add any Soroban-specific integration tests here
          # stellar contract invoke --help
          echo "Integration tests placeholder"

  # Security audit
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-audit-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-audit-

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: |
          cd stellar-lend
          cargo audit
